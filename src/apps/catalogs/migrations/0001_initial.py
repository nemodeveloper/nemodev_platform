# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-18 14:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=20, unique=True, verbose_name='Название учебного кабинета')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Учебный кабинет',
                'db_table': 'catalogs_class_rooms',
                'verbose_name_plural': 'Учебные кабинеты',
                'permissions': (('add_class_room', 'Добавление учебного кабинета'), ('update_class_room', 'Редактирование учебного кабинета'), ('delete_class_room', 'Удаление учебного кабинета')),
            },
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=15, unique=True, verbose_name='Учебный класс')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Учебный класс',
                'db_table': 'catalogs_school_class',
                'verbose_name_plural': 'Учебные классы',
                'permissions': (('add_school_class_entity', 'Добавление учебного класса'), ('update_school_class_entity', 'Редактирование учебного класса'), ('delete_school_class_entity', 'Удаление учебного класса')),
            },
        ),
        migrations.CreateModel(
            name='SchoolClassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=20, verbose_name='Название подгруппы')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='school_class_group', to='catalogs.SchoolClass', verbose_name='Учебный класс')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Подгруппы по классам',
                'db_table': 'catalogs_school_class_group',
                'verbose_name_plural': 'Подгруппы по классам',
                'permissions': (('add_school_class_group_entity', 'Добавление подгруппы класса'), ('update_school_class_group_entity', 'Редактирование подгруппы класса'), ('delete_school_class_group_entity', 'Удаление подгруппы класса')),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_name', models.CharField(max_length=25, unique=True, verbose_name='Название предмета')),
                ('sub_short_name', models.CharField(max_length=12, verbose_name='Краткое название предмета')),
                ('weight', models.IntegerField(verbose_name='Вес предмета')),
                ('subject_type', models.CharField(choices=[('COMMON', 'Общий'), ('TECH', 'Технический'), ('HUMANIT', 'Гуманитарный')], max_length=7, verbose_name='Тип предмета')),
                ('class_rooms', models.ManyToManyField(related_name='subjects', to='catalogs.ClassRoom', verbose_name='Учебные кабинеты')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Учебный предмет',
                'db_table': 'catalogs_subjects',
                'verbose_name_plural': 'Учебные предметы',
                'permissions': (('add_subject_entity', 'Добавление учебного предмета'), ('update_subject_entity', 'Редактирование учебного предмета'), ('delete_subject_entity', 'Удаление учебного предмета')),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=15, verbose_name='Имя')),
                ('father_name', models.CharField(max_length=15, verbose_name='Отчество')),
                ('subjects', models.ManyToManyField(related_name='teachers', to='catalogs.Subject', verbose_name='Предметы')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'Учитель',
                'db_table': 'catalogs_teachers',
                'verbose_name_plural': 'Учителя',
                'permissions': (('add_teacher_entity', 'Добавление информации учителя'), ('update_teacher_entity', 'Редактирование информации по учителю'), ('delete_teacher_entity', 'Удаление информации по учителю')),
            },
        ),
        migrations.AddField(
            model_name='schoolclassgroup',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalogs.Subject', verbose_name='Учебный предмет'),
        ),
    ]
